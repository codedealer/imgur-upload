name: Deploy Imgur Proxy to Cloud Run

on:
  workflow_dispatch:
    inputs:
      project_id:
        description: 'Google Cloud Project ID'
        required: true
        type: string
      region:
        description: 'Google Cloud Region'
        required: false
        default: 'us-central1'
        type: string
      proxy_secret:
        description: 'Proxy Secret (leave empty to auto-generate)'
        required: false
        type: string
  push:
    branches: [ main ]
    paths: [ 'proxy/**' ]

env:
  SERVICE_NAME: imgur-proxy
  REGION: ${{ github.event.inputs.region || 'us-central1' }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Setup pnpm
      uses: pnpm/action-setup@v3
      with:
        version: 9.15.2

    - name: Install dependencies
      run: |
        cd proxy
        pnpm install

    - name: Build TypeScript
      run: |
        cd proxy
        pnpm run build

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        project_id: ${{ github.event.inputs.project_id || secrets.GCP_PROJECT_ID }}
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker to use gcloud
      run: gcloud auth configure-docker

    - name: Build Docker image
      run: |
        cd proxy
        docker build -t gcr.io/${{ github.event.inputs.project_id || secrets.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .

    - name: Push Docker image
      run: |
        docker push gcr.io/${{ github.event.inputs.project_id || secrets.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}

    - name: Generate proxy secret if not provided
      id: proxy-secret
      run: |
        if [ -z "${{ github.event.inputs.proxy_secret }}" ]; then
          SECRET=$(openssl rand -hex 32)
          echo "SECRET=$SECRET" >> $GITHUB_OUTPUT
          echo "Using auto-generated proxy secret"
        else
          echo "SECRET=${{ github.event.inputs.proxy_secret }}" >> $GITHUB_OUTPUT
          echo "Using provided proxy secret"
        fi

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy ${{ env.SERVICE_NAME }} \
          --image gcr.io/${{ github.event.inputs.project_id || secrets.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
          --region ${{ env.REGION }} \
          --platform managed \
          --allow-unauthenticated \
          --port 8080 \
          --memory 256Mi \
          --cpu 1 \
          --max-instances 10 \
          --timeout 300 \
          --set-env-vars PROXY_SECRET=${{ steps.proxy-secret.outputs.SECRET }} \
          --project ${{ github.event.inputs.project_id || secrets.GCP_PROJECT_ID }}

    - name: Get service URL
      id: get-url
      run: |
        URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \
          --platform managed \
          --region ${{ env.REGION }} \
          --format 'value(status.url)' \
          --project ${{ github.event.inputs.project_id || secrets.GCP_PROJECT_ID }})
        echo "SERVICE_URL=$URL" >> $GITHUB_OUTPUT

    - name: Display deployment info
      run: |
        echo "üéâ Deployment successful!"
        echo ""
        echo "Service URL: ${{ steps.get-url.outputs.SERVICE_URL }}"
        echo "Health check: ${{ steps.get-url.outputs.SERVICE_URL }}/health"
        echo ""
        echo "To use the proxy, set these environment variables:"
        echo "GC_PROXY=${{ steps.get-url.outputs.SERVICE_URL }}"
        echo "PROXY_SECRET=${{ steps.proxy-secret.outputs.SECRET }}"
        echo ""
        echo "‚ö†Ô∏è  IMPORTANT: Save the PROXY_SECRET above - it won't be shown again!"
